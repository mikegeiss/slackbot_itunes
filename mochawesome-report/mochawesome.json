{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-13T12:03:06.493Z",
    "end": "2017-05-13T12:03:06.674Z",
    "duration": 181,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "PouchDB Repository",
        "suites": [],
        "tests": [
          {
            "title": "getEntry",
            "fullTitle": "PouchDB Repository getEntry",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntry(trackId);\n})\n    .then(function (response) {\n    expect(response.price).to.equal(expectedPrice);\n    expect(response.trackId).to.equal(trackId);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "95ce9414-4eba-4cd0-bb9f-e92490498f38",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          },
          {
            "title": "getPrice",
            "fullTitle": "PouchDB Repository getPrice",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5674740b-beb2-40f0-abb0-e833ae6029c2",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          },
          {
            "title": "getAllUrls",
            "fullTitle": "PouchDB Repository getAllUrls",
            "timedOut": false,
            "duration": 39,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url1\"))\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url2\"));\n})\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url3\"));\n})\n    .then(function () {\n    return underTest.getAllUrls();\n})\n    .then(function (response) {\n    expect(response.length).to.equal(3);\n    expect(response.indexOf('url1')).to.not.equal(-1);\n    expect(response.indexOf('url2')).to.not.equal(-1);\n    expect(response.indexOf('url3')).to.not.equal(-1);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "603e286c-2343-411b-a8a9-360f47f7defd",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          },
          {
            "title": "updateAppInfoPrice",
            "fullTitle": "PouchDB Repository updateAppInfoPrice",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar initialPrice = RVP_1.RVP.getRandomMoneyValue();\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, initialPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    eintrag.price = expectedPrice;\n    return underTest.updateAppInfoPrice(eintrag);\n})\n    .then(function (response) {\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "8371921a-23e7-4fb2-878c-0b514baa5869",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/build/scripts/repository/PouchDbRepository.spec.js",
        "uuid": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
        "fullFile": "/Users/michael.geiss/IdeaProjects/mike/slackbotItunes/build/scripts/repository/PouchDbRepository.spec.js",
        "passes": [
          {
            "title": "getEntry",
            "fullTitle": "PouchDB Repository getEntry",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntry(trackId);\n})\n    .then(function (response) {\n    expect(response.price).to.equal(expectedPrice);\n    expect(response.trackId).to.equal(trackId);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "95ce9414-4eba-4cd0-bb9f-e92490498f38",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          },
          {
            "title": "getPrice",
            "fullTitle": "PouchDB Repository getPrice",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5674740b-beb2-40f0-abb0-e833ae6029c2",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          },
          {
            "title": "getAllUrls",
            "fullTitle": "PouchDB Repository getAllUrls",
            "timedOut": false,
            "duration": 39,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url1\"))\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url2\"));\n})\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url3\"));\n})\n    .then(function () {\n    return underTest.getAllUrls();\n})\n    .then(function (response) {\n    expect(response.length).to.equal(3);\n    expect(response.indexOf('url1')).to.not.equal(-1);\n    expect(response.indexOf('url2')).to.not.equal(-1);\n    expect(response.indexOf('url3')).to.not.equal(-1);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "603e286c-2343-411b-a8a9-360f47f7defd",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          },
          {
            "title": "updateAppInfoPrice",
            "fullTitle": "PouchDB Repository updateAppInfoPrice",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar initialPrice = RVP_1.RVP.getRandomMoneyValue();\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, initialPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    eintrag.price = expectedPrice;\n    return underTest.updateAppInfoPrice(eintrag);\n})\n    .then(function (response) {\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
            "err": {},
            "isRoot": false,
            "uuid": "8371921a-23e7-4fb2-878c-0b514baa5869",
            "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 147,
        "rootEmpty": false
      },
      {
        "title": "ITunesDbService",
        "suites": [],
        "tests": [
          {
            "title": "insertUrlToDb",
            "fullTitle": "ITunesDbService insertUrlToDb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "ef125cb0-75a7-4cf5-90c3-792e69e19f2e",
            "parentUUID": "9dff216d-8ff6-47de-b098-4e8701b71c6a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/build/scripts/services/ITunesDbService.spec.js",
        "uuid": "9dff216d-8ff6-47de-b098-4e8701b71c6a",
        "fullFile": "/Users/michael.geiss/IdeaProjects/mike/slackbotItunes/build/scripts/services/ITunesDbService.spec.js",
        "passes": [
          {
            "title": "insertUrlToDb",
            "fullTitle": "ITunesDbService insertUrlToDb",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "ef125cb0-75a7-4cf5-90c3-792e69e19f2e",
            "parentUUID": "9dff216d-8ff6-47de-b098-4e8701b71c6a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "6a807a13-68e6-423e-bf36-2cc6a9a2c4b1",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "getEntry",
      "fullTitle": "PouchDB Repository getEntry",
      "timedOut": false,
      "duration": 45,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntry(trackId);\n})\n    .then(function (response) {\n    expect(response.price).to.equal(expectedPrice);\n    expect(response.trackId).to.equal(trackId);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "95ce9414-4eba-4cd0-bb9f-e92490498f38",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "getPrice",
      "fullTitle": "PouchDB Repository getPrice",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5674740b-beb2-40f0-abb0-e833ae6029c2",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "getAllUrls",
      "fullTitle": "PouchDB Repository getAllUrls",
      "timedOut": false,
      "duration": 39,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url1\"))\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url2\"));\n})\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url3\"));\n})\n    .then(function () {\n    return underTest.getAllUrls();\n})\n    .then(function (response) {\n    expect(response.length).to.equal(3);\n    expect(response.indexOf('url1')).to.not.equal(-1);\n    expect(response.indexOf('url2')).to.not.equal(-1);\n    expect(response.indexOf('url3')).to.not.equal(-1);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "603e286c-2343-411b-a8a9-360f47f7defd",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "updateAppInfoPrice",
      "fullTitle": "PouchDB Repository updateAppInfoPrice",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar initialPrice = RVP_1.RVP.getRandomMoneyValue();\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, initialPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    eintrag.price = expectedPrice;\n    return underTest.updateAppInfoPrice(eintrag);\n})\n    .then(function (response) {\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8371921a-23e7-4fb2-878c-0b514baa5869",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "insertUrlToDb",
      "fullTitle": "ITunesDbService insertUrlToDb",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "ef125cb0-75a7-4cf5-90c3-792e69e19f2e",
      "parentUUID": "9dff216d-8ff6-47de-b098-4e8701b71c6a",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "getEntry",
      "fullTitle": "PouchDB Repository getEntry",
      "timedOut": false,
      "duration": 45,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntry(trackId);\n})\n    .then(function (response) {\n    expect(response.price).to.equal(expectedPrice);\n    expect(response.trackId).to.equal(trackId);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "95ce9414-4eba-4cd0-bb9f-e92490498f38",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "getPrice",
      "fullTitle": "PouchDB Repository getPrice",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, expectedPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5674740b-beb2-40f0-abb0-e833ae6029c2",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "getAllUrls",
      "fullTitle": "PouchDB Repository getAllUrls",
      "timedOut": false,
      "duration": 39,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url1\"))\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url2\"));\n})\n    .then(function () {\n    return underTest.insertToDb(createEinrag(RVP_1.RVP.getRandomNumber(10000), RVP_1.RVP.getRandomMoneyValue(), \"url3\"));\n})\n    .then(function () {\n    return underTest.getAllUrls();\n})\n    .then(function (response) {\n    expect(response.length).to.equal(3);\n    expect(response.indexOf('url1')).to.not.equal(-1);\n    expect(response.indexOf('url2')).to.not.equal(-1);\n    expect(response.indexOf('url3')).to.not.equal(-1);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "603e286c-2343-411b-a8a9-360f47f7defd",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "updateAppInfoPrice",
      "fullTitle": "PouchDB Repository updateAppInfoPrice",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var trackId = RVP_1.RVP.getRandomNumber(10);\nvar initialPrice = RVP_1.RVP.getRandomMoneyValue();\nvar expectedPrice = RVP_1.RVP.getRandomMoneyValue();\nvar eintrag = createEinrag(trackId, initialPrice);\nreturn underTest.insertToDb(eintrag)\n    .then(function (response) {\n    expect(response.ok).to.be.true;\n    eintrag.price = expectedPrice;\n    return underTest.updateAppInfoPrice(eintrag);\n})\n    .then(function (response) {\n    return underTest.getEntryPrice(trackId);\n})\n    .then(function (response) {\n    expect(response).to.equal(expectedPrice);\n    return;\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8371921a-23e7-4fb2-878c-0b514baa5869",
      "parentUUID": "1b6495d2-4ca0-4c4a-80a3-dc865df920bb",
      "skipped": false
    },
    {
      "title": "insertUrlToDb",
      "fullTitle": "ITunesDbService insertUrlToDb",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "ef125cb0-75a7-4cf5-90c3-792e69e19f2e",
      "parentUUID": "9dff216d-8ff6-47de-b098-4e8701b71c6a",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}